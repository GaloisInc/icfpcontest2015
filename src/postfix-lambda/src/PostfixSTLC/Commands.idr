module PostfixSTLC.Commands

%default total

data Cmd = PushNum -- push the *type* NUM
         | MkArr   -- make a function type
         | VarZ
         | VarS
         | EmptyCtxt
         | ExtendCtxt
         | MkVar
         | MkZero -- construct a derivation using zero with the numeric constant rule
         | MkSucc -- construct a derivation using the succ rule
         | MkLam
         | MkApp
         | Dup
         | Drop
         | Swap
         | NatZ
         | NatS
         | Get
         | Quote (List Cmd)
         | Apply
         | Rev -- reverse the top n elts of the stack

instance Show Cmd where
  show PushNum = "Num"
  show MkArr = "->"
  show VarZ = "vz"
  show VarS = "vs"
  show EmptyCtxt = "."
  show ExtendCtxt = ","
  show MkVar = "v"
  show MkZero = "zero"
  show MkSucc = "succ"
  show MkLam = "lam"
  show MkApp = "app"
  show Dup = "dup"
  show Drop = "drop"
  show Swap = "swap"
  show NatZ = "z"
  show NatS = "s"
  show Get = "get"
  show (Quote prog) = "` " ++ concat (intersperse " " (map show prog)) ++ " '"
  show Apply = "$"
  show Rev = "rev"

quoteInj : Quote p1 = Quote p2 -> p1 = p2
quoteInj Refl = Refl

-- Thank Odin for automation! Would be better in Coq.
instance DecEq Cmd where
  decEq PushNum PushNum = Yes Refl
  decEq PushNum MkArr = No $ \(Refl) impossible
  decEq PushNum VarZ = No $ \(Refl) impossible
  decEq PushNum VarS = No $ \(Refl) impossible
  decEq PushNum EmptyCtxt = No $ \(Refl) impossible
  decEq PushNum ExtendCtxt = No $ \(Refl) impossible
  decEq PushNum MkVar = No $ \(Refl) impossible
  decEq PushNum MkZero = No $ \(Refl) impossible
  decEq PushNum MkSucc = No $ \(Refl) impossible
  decEq PushNum MkLam = No $ \(Refl) impossible
  decEq PushNum MkApp = No $ \(Refl) impossible
  decEq PushNum Dup = No $ \(Refl) impossible
  decEq PushNum Drop = No $ \(Refl) impossible
  decEq PushNum Swap = No $ \(Refl) impossible
  decEq PushNum NatZ = No $ \(Refl) impossible
  decEq PushNum NatS = No $ \(Refl) impossible
  decEq PushNum Get = No $ \(Refl) impossible
  decEq PushNum (Quote xs) = No $ \(Refl) impossible
  decEq PushNum Apply = No $ \(Refl) impossible
  decEq PushNum Rev = No $ \(Refl) impossible
  decEq MkArr PushNum = No $ \(Refl) impossible
  decEq MkArr MkArr = Yes Refl
  decEq MkArr VarZ = No $ \(Refl) impossible
  decEq MkArr VarS = No $ \(Refl) impossible
  decEq MkArr EmptyCtxt = No $ \(Refl) impossible
  decEq MkArr ExtendCtxt = No $ \(Refl) impossible
  decEq MkArr MkVar = No $ \(Refl) impossible
  decEq MkArr MkZero = No $ \(Refl) impossible
  decEq MkArr MkSucc = No $ \(Refl) impossible
  decEq MkArr MkLam = No $ \(Refl) impossible
  decEq MkArr MkApp = No $ \(Refl) impossible
  decEq MkArr Dup = No $ \(Refl) impossible
  decEq MkArr Drop = No $ \(Refl) impossible
  decEq MkArr Swap = No $ \(Refl) impossible
  decEq MkArr NatZ = No $ \(Refl) impossible
  decEq MkArr NatS = No $ \(Refl) impossible
  decEq MkArr Get = No $ \(Refl) impossible
  decEq MkArr (Quote xs) = No $ \(Refl) impossible
  decEq MkArr Apply = No $ \(Refl) impossible
  decEq MkArr Rev = No $ \(Refl) impossible
  decEq VarZ PushNum = No $ \(Refl) impossible
  decEq VarZ MkArr = No $ \(Refl) impossible
  decEq VarZ VarZ = Yes Refl
  decEq VarZ VarS = No $ \(Refl) impossible
  decEq VarZ EmptyCtxt = No $ \(Refl) impossible
  decEq VarZ ExtendCtxt = No $ \(Refl) impossible
  decEq VarZ MkVar = No $ \(Refl) impossible
  decEq VarZ MkZero = No $ \(Refl) impossible
  decEq VarZ MkSucc = No $ \(Refl) impossible
  decEq VarZ MkLam = No $ \(Refl) impossible
  decEq VarZ MkApp = No $ \(Refl) impossible
  decEq VarZ Dup = No $ \(Refl) impossible
  decEq VarZ Drop = No $ \(Refl) impossible
  decEq VarZ Swap = No $ \(Refl) impossible
  decEq VarZ NatZ = No $ \(Refl) impossible
  decEq VarZ NatS = No $ \(Refl) impossible
  decEq VarZ Get = No $ \(Refl) impossible
  decEq VarZ (Quote xs) = No $ \(Refl) impossible
  decEq VarZ Apply = No $ \(Refl) impossible
  decEq VarZ Rev = No $ \(Refl) impossible
  decEq VarS PushNum = No $ \(Refl) impossible
  decEq VarS MkArr = No $ \(Refl) impossible
  decEq VarS VarZ = No $ \(Refl) impossible
  decEq VarS VarS = Yes Refl
  decEq VarS EmptyCtxt = No $ \(Refl) impossible
  decEq VarS ExtendCtxt = No $ \(Refl) impossible
  decEq VarS MkVar = No $ \(Refl) impossible
  decEq VarS MkZero = No $ \(Refl) impossible
  decEq VarS MkSucc = No $ \(Refl) impossible
  decEq VarS MkLam = No $ \(Refl) impossible
  decEq VarS MkApp = No $ \(Refl) impossible
  decEq VarS Dup = No $ \(Refl) impossible
  decEq VarS Drop = No $ \(Refl) impossible
  decEq VarS Swap = No $ \(Refl) impossible
  decEq VarS NatZ = No $ \(Refl) impossible
  decEq VarS NatS = No $ \(Refl) impossible
  decEq VarS Get = No $ \(Refl) impossible
  decEq VarS (Quote xs) = No $ \(Refl) impossible
  decEq VarS Apply = No $ \(Refl) impossible
  decEq VarS Rev = No $ \(Refl) impossible
  decEq EmptyCtxt PushNum = No $ \(Refl) impossible
  decEq EmptyCtxt MkArr = No $ \(Refl) impossible
  decEq EmptyCtxt VarZ = No $ \(Refl) impossible
  decEq EmptyCtxt VarS = No $ \(Refl) impossible
  decEq EmptyCtxt EmptyCtxt = Yes Refl
  decEq EmptyCtxt ExtendCtxt = No $ \(Refl) impossible
  decEq EmptyCtxt MkVar = No $ \(Refl) impossible
  decEq EmptyCtxt MkZero = No $ \(Refl) impossible
  decEq EmptyCtxt MkSucc = No $ \(Refl) impossible
  decEq EmptyCtxt MkLam = No $ \(Refl) impossible
  decEq EmptyCtxt MkApp = No $ \(Refl) impossible
  decEq EmptyCtxt Dup = No $ \(Refl) impossible
  decEq EmptyCtxt Drop = No $ \(Refl) impossible
  decEq EmptyCtxt Swap = No $ \(Refl) impossible
  decEq EmptyCtxt NatZ = No $ \(Refl) impossible
  decEq EmptyCtxt NatS = No $ \(Refl) impossible
  decEq EmptyCtxt Get = No $ \(Refl) impossible
  decEq EmptyCtxt (Quote xs) = No $ \(Refl) impossible
  decEq EmptyCtxt Apply = No $ \(Refl) impossible
  decEq EmptyCtxt Rev = No $ \(Refl) impossible
  decEq ExtendCtxt PushNum = No $ \(Refl) impossible
  decEq ExtendCtxt MkArr = No $ \(Refl) impossible
  decEq ExtendCtxt VarZ = No $ \(Refl) impossible
  decEq ExtendCtxt VarS = No $ \(Refl) impossible
  decEq ExtendCtxt EmptyCtxt = No $ \(Refl) impossible
  decEq ExtendCtxt ExtendCtxt = Yes Refl
  decEq ExtendCtxt MkVar = No $ \(Refl) impossible
  decEq ExtendCtxt MkZero = No $ \(Refl) impossible
  decEq ExtendCtxt MkSucc = No $ \(Refl) impossible
  decEq ExtendCtxt MkLam = No $ \(Refl) impossible
  decEq ExtendCtxt MkApp = No $ \(Refl) impossible
  decEq ExtendCtxt Dup = No $ \(Refl) impossible
  decEq ExtendCtxt Drop = No $ \(Refl) impossible
  decEq ExtendCtxt Swap = No $ \(Refl) impossible
  decEq ExtendCtxt NatZ = No $ \(Refl) impossible
  decEq ExtendCtxt NatS = No $ \(Refl) impossible
  decEq ExtendCtxt Get = No $ \(Refl) impossible
  decEq ExtendCtxt (Quote xs) = No $ \(Refl) impossible
  decEq ExtendCtxt Apply = No $ \(Refl) impossible
  decEq ExtendCtxt Rev = No $ \(Refl) impossible
  decEq MkVar PushNum = No $ \(Refl) impossible
  decEq MkVar MkArr = No $ \(Refl) impossible
  decEq MkVar VarZ = No $ \(Refl) impossible
  decEq MkVar VarS = No $ \(Refl) impossible
  decEq MkVar EmptyCtxt = No $ \(Refl) impossible
  decEq MkVar ExtendCtxt = No $ \(Refl) impossible
  decEq MkVar MkVar = Yes Refl
  decEq MkVar MkZero = No $ \(Refl) impossible
  decEq MkVar MkSucc = No $ \(Refl) impossible
  decEq MkVar MkLam = No $ \(Refl) impossible
  decEq MkVar MkApp = No $ \(Refl) impossible
  decEq MkVar Dup = No $ \(Refl) impossible
  decEq MkVar Drop = No $ \(Refl) impossible
  decEq MkVar Swap = No $ \(Refl) impossible
  decEq MkVar NatZ = No $ \(Refl) impossible
  decEq MkVar NatS = No $ \(Refl) impossible
  decEq MkVar Get = No $ \(Refl) impossible
  decEq MkVar (Quote xs) = No $ \(Refl) impossible
  decEq MkVar Apply = No $ \(Refl) impossible
  decEq MkVar Rev = No $ \(Refl) impossible
  decEq MkZero PushNum = No $ \(Refl) impossible
  decEq MkZero MkArr = No $ \(Refl) impossible
  decEq MkZero VarZ = No $ \(Refl) impossible
  decEq MkZero VarS = No $ \(Refl) impossible
  decEq MkZero EmptyCtxt = No $ \(Refl) impossible
  decEq MkZero ExtendCtxt = No $ \(Refl) impossible
  decEq MkZero MkVar = No $ \(Refl) impossible
  decEq MkZero MkZero = Yes Refl
  decEq MkZero MkSucc = No $ \(Refl) impossible
  decEq MkZero MkLam = No $ \(Refl) impossible
  decEq MkZero MkApp = No $ \(Refl) impossible
  decEq MkZero Dup = No $ \(Refl) impossible
  decEq MkZero Drop = No $ \(Refl) impossible
  decEq MkZero Swap = No $ \(Refl) impossible
  decEq MkZero NatZ = No $ \(Refl) impossible
  decEq MkZero NatS = No $ \(Refl) impossible
  decEq MkZero Get = No $ \(Refl) impossible
  decEq MkZero (Quote xs) = No $ \(Refl) impossible
  decEq MkZero Apply = No $ \(Refl) impossible
  decEq MkZero Rev = No $ \(Refl) impossible
  decEq MkSucc PushNum = No $ \(Refl) impossible
  decEq MkSucc MkArr = No $ \(Refl) impossible
  decEq MkSucc VarZ = No $ \(Refl) impossible
  decEq MkSucc VarS = No $ \(Refl) impossible
  decEq MkSucc EmptyCtxt = No $ \(Refl) impossible
  decEq MkSucc ExtendCtxt = No $ \(Refl) impossible
  decEq MkSucc MkVar = No $ \(Refl) impossible
  decEq MkSucc MkZero = No $ \(Refl) impossible
  decEq MkSucc MkSucc = Yes Refl
  decEq MkSucc MkLam = No $ \(Refl) impossible
  decEq MkSucc MkApp = No $ \(Refl) impossible
  decEq MkSucc Dup = No $ \(Refl) impossible
  decEq MkSucc Drop = No $ \(Refl) impossible
  decEq MkSucc Swap = No $ \(Refl) impossible
  decEq MkSucc NatZ = No $ \(Refl) impossible
  decEq MkSucc NatS = No $ \(Refl) impossible
  decEq MkSucc Get = No $ \(Refl) impossible
  decEq MkSucc (Quote xs) = No $ \(Refl) impossible
  decEq MkSucc Apply = No $ \(Refl) impossible
  decEq MkSucc Rev = No $ \(Refl) impossible
  decEq MkLam PushNum = No $ \(Refl) impossible
  decEq MkLam MkArr = No $ \(Refl) impossible
  decEq MkLam VarZ = No $ \(Refl) impossible
  decEq MkLam VarS = No $ \(Refl) impossible
  decEq MkLam EmptyCtxt = No $ \(Refl) impossible
  decEq MkLam ExtendCtxt = No $ \(Refl) impossible
  decEq MkLam MkVar = No $ \(Refl) impossible
  decEq MkLam MkZero = No $ \(Refl) impossible
  decEq MkLam MkSucc = No $ \(Refl) impossible
  decEq MkLam MkLam = Yes Refl
  decEq MkLam MkApp = No $ \(Refl) impossible
  decEq MkLam Dup = No $ \(Refl) impossible
  decEq MkLam Drop = No $ \(Refl) impossible
  decEq MkLam Swap = No $ \(Refl) impossible
  decEq MkLam NatZ = No $ \(Refl) impossible
  decEq MkLam NatS = No $ \(Refl) impossible
  decEq MkLam Get = No $ \(Refl) impossible
  decEq MkLam (Quote xs) = No $ \(Refl) impossible
  decEq MkLam Apply = No $ \(Refl) impossible
  decEq MkLam Rev = No $ \(Refl) impossible
  decEq MkApp PushNum = No $ \(Refl) impossible
  decEq MkApp MkArr = No $ \(Refl) impossible
  decEq MkApp VarZ = No $ \(Refl) impossible
  decEq MkApp VarS = No $ \(Refl) impossible
  decEq MkApp EmptyCtxt = No $ \(Refl) impossible
  decEq MkApp ExtendCtxt = No $ \(Refl) impossible
  decEq MkApp MkVar = No $ \(Refl) impossible
  decEq MkApp MkZero = No $ \(Refl) impossible
  decEq MkApp MkSucc = No $ \(Refl) impossible
  decEq MkApp MkLam = No $ \(Refl) impossible
  decEq MkApp MkApp = Yes Refl
  decEq MkApp Dup = No $ \(Refl) impossible
  decEq MkApp Drop = No $ \(Refl) impossible
  decEq MkApp Swap = No $ \(Refl) impossible
  decEq MkApp NatZ = No $ \(Refl) impossible
  decEq MkApp NatS = No $ \(Refl) impossible
  decEq MkApp Get = No $ \(Refl) impossible
  decEq MkApp (Quote xs) = No $ \(Refl) impossible
  decEq MkApp Apply = No $ \(Refl) impossible
  decEq MkApp Rev = No $ \(Refl) impossible
  decEq Dup PushNum = No $ \(Refl) impossible
  decEq Dup MkArr = No $ \(Refl) impossible
  decEq Dup VarZ = No $ \(Refl) impossible
  decEq Dup VarS = No $ \(Refl) impossible
  decEq Dup EmptyCtxt = No $ \(Refl) impossible
  decEq Dup ExtendCtxt = No $ \(Refl) impossible
  decEq Dup MkVar = No $ \(Refl) impossible
  decEq Dup MkZero = No $ \(Refl) impossible
  decEq Dup MkSucc = No $ \(Refl) impossible
  decEq Dup MkLam = No $ \(Refl) impossible
  decEq Dup MkApp = No $ \(Refl) impossible
  decEq Dup Dup = Yes Refl
  decEq Dup Drop = No $ \(Refl) impossible
  decEq Dup Swap = No $ \(Refl) impossible
  decEq Dup NatZ = No $ \(Refl) impossible
  decEq Dup NatS = No $ \(Refl) impossible
  decEq Dup Get = No $ \(Refl) impossible
  decEq Dup (Quote xs) = No $ \(Refl) impossible
  decEq Dup Apply = No $ \(Refl) impossible
  decEq Dup Rev = No $ \(Refl) impossible
  decEq Drop PushNum = No $ \(Refl) impossible
  decEq Drop MkArr = No $ \(Refl) impossible
  decEq Drop VarZ = No $ \(Refl) impossible
  decEq Drop VarS = No $ \(Refl) impossible
  decEq Drop EmptyCtxt = No $ \(Refl) impossible
  decEq Drop ExtendCtxt = No $ \(Refl) impossible
  decEq Drop MkVar = No $ \(Refl) impossible
  decEq Drop MkZero = No $ \(Refl) impossible
  decEq Drop MkSucc = No $ \(Refl) impossible
  decEq Drop MkLam = No $ \(Refl) impossible
  decEq Drop MkApp = No $ \(Refl) impossible
  decEq Drop Dup = No $ \(Refl) impossible
  decEq Drop Drop = Yes Refl
  decEq Drop Swap = No $ \(Refl) impossible
  decEq Drop NatZ = No $ \(Refl) impossible
  decEq Drop NatS = No $ \(Refl) impossible
  decEq Drop Get = No $ \(Refl) impossible
  decEq Drop (Quote xs) = No $ \(Refl) impossible
  decEq Drop Apply = No $ \(Refl) impossible
  decEq Drop Rev = No $ \(Refl) impossible
  decEq Swap PushNum = No $ \(Refl) impossible
  decEq Swap MkArr = No $ \(Refl) impossible
  decEq Swap VarZ = No $ \(Refl) impossible
  decEq Swap VarS = No $ \(Refl) impossible
  decEq Swap EmptyCtxt = No $ \(Refl) impossible
  decEq Swap ExtendCtxt = No $ \(Refl) impossible
  decEq Swap MkVar = No $ \(Refl) impossible
  decEq Swap MkZero = No $ \(Refl) impossible
  decEq Swap MkSucc = No $ \(Refl) impossible
  decEq Swap MkLam = No $ \(Refl) impossible
  decEq Swap MkApp = No $ \(Refl) impossible
  decEq Swap Dup = No $ \(Refl) impossible
  decEq Swap Drop = No $ \(Refl) impossible
  decEq Swap Swap = Yes Refl
  decEq Swap NatZ = No $ \(Refl) impossible
  decEq Swap NatS = No $ \(Refl) impossible
  decEq Swap Get = No $ \(Refl) impossible
  decEq Swap (Quote xs) = No $ \(Refl) impossible
  decEq Swap Apply = No $ \(Refl) impossible
  decEq Swap Rev = No $ \(Refl) impossible
  decEq NatZ PushNum = No $ \(Refl) impossible
  decEq NatZ MkArr = No $ \(Refl) impossible
  decEq NatZ VarZ = No $ \(Refl) impossible
  decEq NatZ VarS = No $ \(Refl) impossible
  decEq NatZ EmptyCtxt = No $ \(Refl) impossible
  decEq NatZ ExtendCtxt = No $ \(Refl) impossible
  decEq NatZ MkVar = No $ \(Refl) impossible
  decEq NatZ MkZero = No $ \(Refl) impossible
  decEq NatZ MkSucc = No $ \(Refl) impossible
  decEq NatZ MkLam = No $ \(Refl) impossible
  decEq NatZ MkApp = No $ \(Refl) impossible
  decEq NatZ Dup = No $ \(Refl) impossible
  decEq NatZ Drop = No $ \(Refl) impossible
  decEq NatZ Swap = No $ \(Refl) impossible
  decEq NatZ NatZ = Yes Refl
  decEq NatZ NatS = No $ \(Refl) impossible
  decEq NatZ Get = No $ \(Refl) impossible
  decEq NatZ (Quote xs) = No $ \(Refl) impossible
  decEq NatZ Apply = No $ \(Refl) impossible
  decEq NatZ Rev = No $ \(Refl) impossible
  decEq NatS PushNum = No $ \(Refl) impossible
  decEq NatS MkArr = No $ \(Refl) impossible
  decEq NatS VarZ = No $ \(Refl) impossible
  decEq NatS VarS = No $ \(Refl) impossible
  decEq NatS EmptyCtxt = No $ \(Refl) impossible
  decEq NatS ExtendCtxt = No $ \(Refl) impossible
  decEq NatS MkVar = No $ \(Refl) impossible
  decEq NatS MkZero = No $ \(Refl) impossible
  decEq NatS MkSucc = No $ \(Refl) impossible
  decEq NatS MkLam = No $ \(Refl) impossible
  decEq NatS MkApp = No $ \(Refl) impossible
  decEq NatS Dup = No $ \(Refl) impossible
  decEq NatS Drop = No $ \(Refl) impossible
  decEq NatS Swap = No $ \(Refl) impossible
  decEq NatS NatZ = No $ \(Refl) impossible
  decEq NatS NatS = Yes Refl
  decEq NatS Get = No $ \(Refl) impossible
  decEq NatS (Quote xs) = No $ \(Refl) impossible
  decEq NatS Apply = No $ \(Refl) impossible
  decEq NatS Rev = No $ \(Refl) impossible
  decEq Get PushNum = No $ \(Refl) impossible
  decEq Get MkArr = No $ \(Refl) impossible
  decEq Get VarZ = No $ \(Refl) impossible
  decEq Get VarS = No $ \(Refl) impossible
  decEq Get EmptyCtxt = No $ \(Refl) impossible
  decEq Get ExtendCtxt = No $ \(Refl) impossible
  decEq Get MkVar = No $ \(Refl) impossible
  decEq Get MkZero = No $ \(Refl) impossible
  decEq Get MkSucc = No $ \(Refl) impossible
  decEq Get MkLam = No $ \(Refl) impossible
  decEq Get MkApp = No $ \(Refl) impossible
  decEq Get Dup = No $ \(Refl) impossible
  decEq Get Drop = No $ \(Refl) impossible
  decEq Get Swap = No $ \(Refl) impossible
  decEq Get NatZ = No $ \(Refl) impossible
  decEq Get NatS = No $ \(Refl) impossible
  decEq Get Get = Yes Refl
  decEq Get (Quote xs) = No $ \(Refl) impossible
  decEq Get Apply = No $ \(Refl) impossible
  decEq Get Rev = No $ \(Refl) impossible
  decEq (Quote xs) PushNum = No $ \(Refl) impossible
  decEq (Quote xs) MkArr = No $ \(Refl) impossible
  decEq (Quote xs) VarZ = No $ \(Refl) impossible
  decEq (Quote xs) VarS = No $ \(Refl) impossible
  decEq (Quote xs) EmptyCtxt = No $ \(Refl) impossible
  decEq (Quote xs) ExtendCtxt = No $ \(Refl) impossible
  decEq (Quote xs) MkVar = No $ \(Refl) impossible
  decEq (Quote xs) MkZero = No $ \(Refl) impossible
  decEq (Quote xs) MkSucc = No $ \(Refl) impossible
  decEq (Quote xs) MkLam = No $ \(Refl) impossible
  decEq (Quote xs) MkApp = No $ \(Refl) impossible
  decEq (Quote xs) Dup = No $ \(Refl) impossible
  decEq (Quote xs) Drop = No $ \(Refl) impossible
  decEq (Quote xs) Swap = No $ \(Refl) impossible
  decEq (Quote xs) NatZ = No $ \(Refl) impossible
  decEq (Quote xs) NatS = No $ \(Refl) impossible
  decEq (Quote xs) Get = No $ \(Refl) impossible
  decEq (Quote xs) (Quote ys) with (assert_total $ decEq xs ys)
    decEq (Quote xs) (Quote xs) | Yes Refl  = Yes Refl
    decEq (Quote xs) (Quote ys) | No contra = No $ contra . quoteInj
  decEq (Quote xs) Apply = No $ \(Refl) impossible
  decEq (Quote xs) Rev = No $ \(Refl) impossible
  decEq Apply PushNum = No $ \(Refl) impossible
  decEq Apply MkArr = No $ \(Refl) impossible
  decEq Apply VarZ = No $ \(Refl) impossible
  decEq Apply VarS = No $ \(Refl) impossible
  decEq Apply EmptyCtxt = No $ \(Refl) impossible
  decEq Apply ExtendCtxt = No $ \(Refl) impossible
  decEq Apply MkVar = No $ \(Refl) impossible
  decEq Apply MkZero = No $ \(Refl) impossible
  decEq Apply MkSucc = No $ \(Refl) impossible
  decEq Apply MkLam = No $ \(Refl) impossible
  decEq Apply MkApp = No $ \(Refl) impossible
  decEq Apply Dup = No $ \(Refl) impossible
  decEq Apply Drop = No $ \(Refl) impossible
  decEq Apply Swap = No $ \(Refl) impossible
  decEq Apply NatZ = No $ \(Refl) impossible
  decEq Apply NatS = No $ \(Refl) impossible
  decEq Apply Get = No $ \(Refl) impossible
  decEq Apply (Quote xs) = No $ \(Refl) impossible
  decEq Apply Apply = Yes Refl
  decEq Apply Rev = No $ \(Refl) impossible
  decEq Rev Rev = Yes Refl
  decEq Rev Apply = No $ \(Refl) impossible
  decEq Rev Get = No $ \(Refl) impossible
  decEq Rev NatS = No $ \(Refl) impossible
  decEq Rev NatZ = No $ \(Refl) impossible
  decEq Rev Swap = No $ \(Refl) impossible
  decEq Rev Drop = No $ \(Refl) impossible
  decEq Rev Dup = No $ \(Refl) impossible
  decEq Rev MkApp = No $ \(Refl) impossible
  decEq Rev MkLam = No $ \(Refl) impossible
  decEq Rev MkSucc = No $ \(Refl) impossible
  decEq Rev MkZero = No $ \(Refl) impossible
  decEq Rev MkVar = No $ \(Refl) impossible
  decEq Rev ExtendCtxt = No $ \(Refl) impossible
  decEq Rev EmptyCtxt = No $ \(Refl) impossible
  decEq Rev VarS = No $ \(Refl) impossible
  decEq Rev VarZ = No $ \(Refl) impossible
  decEq Rev MkArr = No $ \(Refl) impossible
  decEq Rev PushNum = No $ \(Refl) impossible
  decEq Rev (Quote xs) = No $ \(Refl) impossible
